import org.gradle.internal.os.OperatingSystem

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
}

group 'com.bobbyjap'
version '1.0-SNAPSHOT'

def kotlinVersion = '1.6.10'
def lwjglVersion = '3.3.0'

def os = OperatingSystem.current()
def osArch = System.getProperty("os.arch")
def lwjglNatives
if (os.isLinux()) {
    lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
            ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
            : "natives-linux"
} else if (os.isMacOsX()) {
    lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
            ? "natives-macos-arm64" : "natives-macos"
} else if (os.isWindows()) {
    lwjglNatives = osArch.contains("64") ? "natives-windows" : "natives-windows-x86"
} else {
    throw new UnknownConfigurationException("Operating System " + os.getName() + " is not supported")
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.lwjgl:lwjgl:$lwjglVersion"
    implementation "org.lwjgl:lwjgl-glfw:$lwjglVersion"
    implementation "org.lwjgl:lwjgl-opengl:$lwjglVersion"

    runtimeOnly "org.lwjgl:lwjgl:$lwjglVersion:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw:$lwjglVersion:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl:$lwjglVersion:$lwjglNatives"
}

repositories {
    mavenCentral()
}

task execute(type: JavaExec) {
    classpath(sourceSets.main.runtimeClasspath)
    main('enginetester.MainGameLoopKt')

    if (os.isMacOsX()) {
        jvmArgs '-XstartOnFirstThread'
    }
}
